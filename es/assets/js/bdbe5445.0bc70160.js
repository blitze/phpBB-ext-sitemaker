(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[66],{3905:function(e,a,n){"use strict";n.d(a,{Zo:function(){return c},kt:function(){return m}});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),u=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?t.createElement(b,l(l({ref:a},c),{},{components:n})):t.createElement(b,l({ref:a},c))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3796:function(e,a,n){"use strict";n.r(a),n.d(a,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var t=n(2122),r=n(9756),o=(n(7294),n(3905)),l=["components"],i={title:"Extendiendo phpBB SiteMaker",sidebar_position:1},s=void 0,u={unversionedId:"dev/overview",id:"dev/overview",isDocsHomePage:!1,title:"Extendiendo phpBB SiteMaker",description:"Puede extender/modificar SiteMaker phpBB usando reemplazo de servicio, decoraci\xf3n de serviciosy sistema de eventos de phpBB. Puede encontrar una lista de eventos soportados aqu\xed.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/dev/overview.md",sourceDirName:"dev",slug:"/dev/overview",permalink:"/phpBB-ext-sitemaker/es/docs/dev/overview",editUrl:"https://crowdin.com/project/phpbb-ext-sitemaker/es",version:"current",sidebarPosition:1,frontMatter:{title:"Extendiendo phpBB SiteMaker",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Personalizar la pantalla de bloques",permalink:"/phpBB-ext-sitemaker/es/docs/user/site/block-modifiers"},next:{title:"phpBB Eventos SiteMaker",permalink:"/phpBB-ext-sitemaker/es/docs/dev/events"}},c=[{value:"Crear un bloque SiteMaker",id:"crear-un-bloque-sitemaker",children:[{value:"Ajustes del bloque",id:"ajustes-del-bloque",children:[]},{value:"Nombrando bloques",id:"nombrando-bloques",children:[]},{value:"Traducci\xf3n",id:"traducci\xf3n",children:[]},{value:"Renderizado el bloque",id:"renderizado-el-bloque",children:[]},{value:"Bloquear activos",id:"bloquear-activos",children:[]}]}],p={toc:c};function d(e){var a=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Puede extender/modificar SiteMaker phpBB usando ",(0,o.kt)("a",{parentName:"p",href:"https://area51.phpbb.com/docs/dev/3.2.x/extensions/tutorial_advanced.html#using-service-replacement"},"reemplazo de servicio"),", ",(0,o.kt)("a",{parentName:"p",href:"https://area51.phpbb.com/docs/dev/3.2.x/extensions/tutorial_advanced.html#using-service-decoration"},"decoraci\xf3n de servicios"),"y ",(0,o.kt)("a",{parentName:"p",href:"https://area51.phpbb.com/docs/dev/3.2.x/extensions/tutorial_events.html"},"sistema de eventos de phpBB"),". Puede encontrar una lista de eventos soportados ",(0,o.kt)("a",{parentName:"p",href:"/phpBB-ext-sitemaker/es/docs/dev/events"},"aqu\xed"),"."),(0,o.kt)("h2",{id:"crear-un-bloque-sitemaker"},"Crear un bloque SiteMaker"),(0,o.kt)("p",null,"Un bloque SiteMaker phpBB es simplemente una clase que extiende la clase blitze\\sitemaker\\services\\blocks\\driver\\block y devuelve un array del m\xe9todo \"display\" con un 'title' y 'content'. Todo lo dem\xe1s en medio depende de usted. Para que tu bloque sea detectable por phpBB SiteMaker, necesitar\xe1s darle la etiqueta \"sitemaker.block\"."),(0,o.kt)("p",null,'Digamos que tenemos una extensi\xf3n con proveedor/extensi\xf3n como mi/ejemplo. Para crear un bloque llamado "my_block" para phpBB SiteMaker:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'Crear una carpeta "bloques"'),(0,o.kt)("li",{parentName:"ul"},"Crear archivo my_block.php en la carpeta bloques con el siguiente contenido")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"namespace my\\example\\blocks;\n\nuse blitze\\sitemaker\\services\\blocks\\driver\\block;\n\nclass my_block extends block\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function display(array $settings, $edit_mode = false)\n    {\n        return array(\n            'title' => 'mi t\xedtulo de bloques',\n            'contenido' => 'mi contenido de bloque',\n        );\n    }\n}\n")),(0,o.kt)("p",null,"Luego, en el archivo config.yml, a\xf1ada lo siguiente:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"servicios:\n\n...\n\n    my.example.block.my_block:\n        class: mi\\example\\blocks\\my_block\n        llamadas:\n            - [set_name, [my.example.block.my_block]]\n        etiquetas:\n            - { name: sitemaker.block }\n\n....\n\n")),(0,o.kt)("p",null,"Como m\xednimo, eso es todo lo que necesitas. Si entra en modo edici\xf3n, deber\xeda ver el bloque como 'MY_EXAMPLE_BLOCK_MY_BLOCK' que puede ser arrastrado y soltado en cualquier posici\xf3n de bloque. Pero este bloque no hace nada emocionante. No tiene ajustes y no traduce el nombre del bloque. Hag\xe1moslo m\xe1s interesante."),(0,o.kt)("h3",{id:"ajustes-del-bloque"},"Ajustes del bloque"),(0,o.kt)("p",null,'Vamos a modificar nuestros bloques/my_block. archivo hp y a\xf1adir un m\xe9todo "get_config" devuelve una matriz en la que las claves son la configuraci\xf3n de bloque y los valores son una matriz que describe la configuraci\xf3n as\xed:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"    /**\n     * @inheritdoc\n     */\n    public function get_config(array $settings)\n    {\n        $options = array(1 => 'SOME_LANG_VAR', 2 => 'OTHER_LANG_VAR');\n        array de retorno(\n            'legend1' => 'TAB1',\n            'checkbox' => array('lang' => 'SOME_LANG_VAR_1', 'validate' => 'string', 'type' => 'checkbox', 'options' => $options, 'default' => array(), 'explicar' => false),\n            'yes_no' => array('lang' => 'SOME_LANG_VAR_2', 'validate' => 'bool', 'type' => 'radio:yes_no', 'explain' => false, 'default' => false),\n            'radio' => array('lang' => 'SOME_LANG_VAR_3', 'validate' => 'bool', 'type' => 'radio', 'options' => $options, 'explicar' => false, 'predeterminado' => 'tema'),\n            'select' => array('lang' => 'SOME_LANG_VAR_4', 'validate' => 'string', 'type' => 'select', 'options' => $options, 'default' => '', 'explicar' => falso),\n            'multi' => array('lang' => 'SOME_LANG_VAR_5', 'validate' => 'string', 'type' => 'multi_select', 'options' => $options, 'default' => array(), 'explicar' => false),\n            'legend2' => 'TAB2',\n            'n\xfamero' => array('lang' => 'SOME_LANG_VAR_6', 'validate' => 'int:0:20', 'type' => 'number:0:20', 'maxlength' => 2, 'explicar' => false, 'default' => 5),\n            'textarea' => array('lang' => 'SOME_LANG_VAR_7', 'validate' => 'string', 'tipo' => 'textarea:3:40', 'maxlength' => 2, 'explicar' => true, 'default' => ''),\n            'activar' => array('lang' => 'SOME_TOGGLABLE_VAR', 'validate' => 'string', 'type' => 'select:1:0:toggle_key', 'options' => $options, 'default' => '', 'append' => '<div id=\"toggle_key-1\">Mostrar s\xf3lo cuando la opci\xf3n 1 est\xe1 seleccionada</div>'),\n        );\n}\n")),(0,o.kt)("p",null,"Esto se construye de la misma manera que phpBB construye la configuraci\xf3n del tablero en ACP. Puedes ver m\xe1s ejemplos ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/phpbb/phpbb/blob/master/phpBB/includes/acp/acp_board.php"},"aqu\xed"),"."),(0,o.kt)("p",null,"Si quieres un tipo de campo personalizado, puedes ver un ejemplo ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/blitze/phpBB-ext-sitemaker_content/blob/develop/blocks/recent.php"},"aqu\xed")," ('content_type' setting)."),(0,o.kt)("p",null,"Nota 'legend1' y 'legend2': Estos se utilizan para separar los ajustes en pesta\xf1as."),(0,o.kt)("h3",{id:"nombrando-bloques"},"Nombrando bloques"),(0,o.kt)("p",null,"La convenci\xf3n para nombres de bloque es que el nombre del servicio (por ejemplo, my.example.block. y el bloque",(0,o.kt)("em",{parentName:"p"},"de arriba) se utilizar\xe1 como la clave de idioma reemplazando los puntos (.) con gui\xf3n bajo ("),") (por ejemplo, MY_EXAMPLE_BLOCK_MY_BLOCK)."),(0,o.kt)("h3",{id:"traducci\xf3n"},"Traducci\xf3n"),(0,o.kt)("p",null,'Tenga en cuenta tambi\xe9n que tenemos varias claves de idioma que necesitan ser traducidas. Para ello, crea un archivo llamado "blocks_admin.php" en tu carpeta de idioma. Este archivo se cargar\xe1 autom\xe1ticamente al editar bloques, y deber\xeda tener traducciones para la configuraci\xf3n de bloques y nombres de bloques.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$lang = array_merge($lang, array(\n    'SOME_LANG_VAR' => 'Opci\xf3n 1',\n    'Otro_LANG_VAR' => 'Opci\xf3n 2',\n    'SOME_LANG_VAR_1' => 'Ajuste 1',\n....\n    'MY_EXAMPLE_BLOCK_MY_BLOCK' => 'Mi bloque',\n);\n")),(0,o.kt)("p",null,"Debido a que 'blocks_admin.php' s\xf3lo se carga al editar bloques, tendr\xe1s que a\xf1adir otras traducciones (p. ej. bloque de t\xedtulo) cargando un archivo de idioma en el m\xe9todo de visualizaci\xf3n como ",(0,o.kt)("inlineCode",{parentName:"p"},"$language->add_lang('my_lang_file', 'mi/ejemplo');")),(0,o.kt)("h3",{id:"renderizado-el-bloque"},"Renderizado el bloque"),(0,o.kt)("p",null,"El nuevo bloque s\xf3lo se mostrar\xe1 si est\xe1 renderizando algo. Tu bloque puede devolver cualquier cadena de texto como contenido, pero en la mayor\xeda de los casos, necesitas una plantilla para representar tu contenido. Para renderizar tu bloque usando plantillas, el bloque debe retornar un array que contenga los datos que desea pasar a la plantilla y tambi\xe9n debe implementar el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"get_template")," como se demuestra a continuaci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"    /**\n     * @inheritdoc\n     */\n    public function get_config(array $settings)\n    {\n        $options = array(1 => 'SOME_LANG_VAR', 2 => 'OTHER_LANG_VAR');\n        array de retorno(\n            'legend1' => 'TAB1',\n            'some_setting' => array('lang' => 'SOME_LANG_VAR_1', 'validate' => 'string', 'type' => 'checkbox', 'options' => $options, 'default' => array(), 'explicar' => false),\n        );\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function get_template()\n    {\n        return '@my_example/my_block. tml';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function display(array $data, $edit_mode = false)\n    {\n        if ($edit_mode)\n        {\n            // hacer algo s\xf3lo en modo edici\xf3n\n        }\n\n        return array(\n            'title' => 'MY_BLOCK_TITLE',\n            'data' => array(\n                'some_var' => $data['settings']['some_setting'],\n            ),\n        );\n}\n")),(0,o.kt)("p",null,"Entonces tu archivo styles/all/my_block.html o styles/prosilver/my_block.html podr\xeda verse algo as\xed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<p>Has seleccionado: {{ some_var }}</p>\n")),(0,o.kt)("p",null,"En resumen, tu bloque debe devolver un array con una clave de ",(0,o.kt)("inlineCode",{parentName:"p"},"t\xedtulo")," (para el t\xedtulo del bloque) y una clave de ",(0,o.kt)("inlineCode",{parentName:"p"},"contenido")," (si el bloque solo muestra una cadena y no utiliza una plantilla) o una clave de ",(0,o.kt)("inlineCode",{parentName:"p"},"datos")," (si el bloque usa una plantilla, en tal caso, tambi\xe9n necesitar\xe1 implementar el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"get_template"),"."),(0,o.kt)("h3",{id:"bloquear-activos"},"Bloquear activos"),(0,o.kt)("p",null,"Si tu bloque necesita a\xf1adir recursos (css/js) a la p\xe1gina, recomiendo usar la clase utilitario ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/blitze/phpBB-ext-sitemaker/blob/develop/services/util.php"},"del sitemaker")," para eso. Ya que puede haber m\xe1s de una instancia del mismo bloque en la p\xe1gina, u otros bloques podr\xedan estar a\xf1adiendo el mismo activo, la clase util asegura que el activo s\xf3lo se a\xf1ade uno."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"        $this->util->add_assets(array(\n            'js' => array(\n                '@my_example/assets/algunos. s',\n                100 => '@mi_ejemplo/activos/otro. s', // establecer prioridad\n            ),\n            'css' => array(\n                '@my_example/assets/algunos. ss',\n            )\n));\n")),(0,o.kt)("p",null,"Por supuesto, la clase util tendr\xe1 que ser a\xf1adida a sus definiciones de servicio en config.yml as\xed: ",(0,o.kt)("inlineCode",{parentName:"p"},"- '@blitze.sitemaker. til'")," y definido en el constructor de tu bloque ",(0,o.kt)("inlineCode",{parentName:"p"},"\\blitze\\sitemaker\\services\\util $util"),"."),(0,o.kt)("p",null,"Y eso es todo. \xa1Hemos terminado!"))}d.isMDXComponent=!0}}]);